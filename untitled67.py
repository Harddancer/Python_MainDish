#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Mar  3 19:17:12 2022

@author: yamamotod
"""




#Было сложно, даже очень, учитывая, что тема двумерных массивов была затронута только чуть-чуть в предыдущих уроках.
#
#Оставлю пояснение по этапам как я решала эту задачу:
#
#1) Необходимо разобраться как записать входные данные. Так как они подаются построчно, можно их записывать как отдельные одномерные массивы, а после записывать в другой массив как отдельные его элементы  - т.е. буквально получить одномерный массив, состоящий из других одномерных массивов.
#
#2) Как вычислять сумму соседей элементов входного массива, да так чтобы не вылезти за границы массива. Сумма соседей элемента c1[i][j] = c[i-1][j] + c[i+1][j] + c[i][j-1] + c[i][j+1]. Так как python прекрасно работает с отрицательными индексами, то проблем с (i-1, j) и (i, j-1) нет. Проблемы возникают с (i+1, j) и (i, j+1).  Например при работе с массивом:
#
#9 5 3
#0 7 -1
#-5 2 9
#
#посчитаем сумму соседей 3 (c[0][2]) = 9 (c[-1][2]) + (-1)(c[1][2]) + 5 (c[0][1]) + ? (c[0][3]). Последний элемент выходит за границы массива, фактически на его месте должна быть 9 (c[0][0]), т.е. при выходе за рамки мы должны вычесть длину массива. И тогда все будет работать))  Т.е. c1[i][j] = c[i-1][j] + c[i+1 - что-то][j] + c[i][j-1] + c[i][j+1 - что-то].
#
#3) Записать новые пересчитанные элементы в массив по принципу работы 1 пункта.
#
#4) Вывести новый массив))


#Напишите программу, на вход которой подаётся прямоугольная матрица в 
#виде последовательности строк. После последней строки матрицы идёт строка, 
#содержащая только строку "end" (без кавычек, см. Sample Input).
#Программа должна вывести матрицу того же размера, 
#у которой каждый элемент в позиции i, j
#равен сумме элементов первой матрицы на позициях
#(i-1, j), (i+1, j), (i, j-1), (i, j+1).
#У крайних символов соседний элемент находится с противоположной стороны матрицы.
#В случае одной строки/столбца элемент сам себе
# является соседом по соответствующему направлению.
array_input = []
q = ''
while q != 'end':
    q = input()
    if q != 'end':
        array_input.append([int(i) for i in q.split()])
    else:
        break

x, y = 3, 3
array_output = [[0 for j in range(y)] for i in range(x)]

for i in range ( len(array_input) ): 
    for j in range ( len(array_input[i]) ):
        array_output [i][j] = array_input[i-1][j]+ array_input[(i+1)%len(array_input)][j] +array_input[i][j-1]+array_input[i][(j+1)%len(array_input[0])]
        print (f'{array_output [i][j]}', end = "  " ) 
    print ()

n = ''
m = []
while True:
    n = str(input()) # ввод строк
    if n == 'end':
        break
    m.append([int(s) for s in n.split()]) 
li, lj = len(m), len(m[0])

new = [[sum([m[i-1][j], m[(i+1)%li][j], m[i][j-1], m[i][(j+1)%lj]]) for j in range(lj)] for i in range(li)]

for i in range (li):
    for j in range (lj):
        print(new[i][j], end =' ')
    print()





# Sample Input 1:
#
#9 5 3
#0 7 -1
#-5 2 9
#end
#
#Sample Output 1:
#
#3 21 22
#10 6 19
#20 16 -1


